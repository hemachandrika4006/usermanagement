{"ast":null,"code":"import _objectSpread from\"C:/Users/hemac/OneDrive/Desktop/routing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/hemac/OneDrive/Desktop/routing/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{loginContext}from\"./logincontext\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";function UserLoginStore(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),loginErr=_useState4[0],setLoginErr=_useState4[1];// for updating the message whether it is write or wrong \nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),userLoginStatus=_useState6[0],setUserLoginStatus=_useState6[1];{/*for knowing the status of login if components want to know does user login \r\nit in or not we have to know the status if it is false no user is logging if it is true some user is logged into it \r\nto know who is that someone we keep track on user*/}//login user\nvar loginUser=function loginUser(userCredObj){axios.post(\"http://localhost:4000/user-api/login\",userCredObj).then(function(response){if(response.data.message===\"success\"){console.log(response);//save token to local storage\nlocalStorage.setItem(\"token\",response.data.token);setCurrentUser(_objectSpread({},response.data.user));// we are using spreading operator bcz to maintaint he copy of the details of user\nsetLoginErr(\"\");setUserLoginStatus(true);}else{setLoginErr(response.data.message);}}).catch(function(err){console.log(\"err\",err);setLoginErr(err.message);});};//logout user\nvar logoutUser=function logoutUser(){localStorage.clear();setUserLoginStatus(false);};return/*#__PURE__*/_jsx(loginContext.Provider,{value:[currentUser,loginErr,userLoginStatus,loginUser,logoutUser],children:children});}export default UserLoginStore;","map":{"version":3,"names":["React","useState","loginContext","axios","jsx","_jsx","UserLoginStore","_ref","children","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","loginErr","setLoginErr","_useState5","_useState6","userLoginStatus","setUserLoginStatus","loginUser","userCredObj","post","then","response","data","message","console","log","localStorage","setItem","token","_objectSpread","user","catch","err","logoutUser","clear","Provider","value"],"sources":["C:/Users/hemac/OneDrive/Desktop/routing/src/contexts/userloginstore.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { loginContext } from \"./logincontext\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserLoginStore({ children }) {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [loginErr, setLoginErr] = useState(\"\"); // for updating the message whether it is write or wrong \r\n  const [userLoginStatus,setUserLoginStatus]=useState(false)\r\n   {/*for knowing the status of login if components want to know does user login \r\nit in or not we have to know the status if it is false no user is logging if it is true some user is logged into it \r\nto know who is that someone we keep track on user*/} \r\n\r\n  \r\n\r\n  //login user\r\n  const loginUser = (userCredObj) => {\r\n    axios\r\n      .post(\"http://localhost:4000/user-api/login\", userCredObj)\r\n      .then((response) => {\r\n        if (response.data.message === \"success\") {\r\n\r\n          console.log(response)\r\n          //save token to local storage\r\n          localStorage.setItem(\"token\",response.data.token)\r\n          setCurrentUser({...response.data.user}); // we are using spreading operator bcz to maintaint he copy of the details of user\r\n          setLoginErr(\"\");\r\n          setUserLoginStatus(true)\r\n        } else {\r\n          setLoginErr(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\",err)\r\n        setLoginErr(err.message);\r\n      });\r\n  };\r\n\r\n  //logout user\r\n  const logoutUser=()=>{\r\n    localStorage.clear()\r\n    setUserLoginStatus(false)\r\n  }\r\n\r\n  return (\r\n    <loginContext.Provider value={[currentUser,loginErr,userLoginStatus,loginUser,logoutUser]}>\r\n      {children}\r\n    </loginContext.Provider>\r\n  );\r\n}\r\n\r\nexport default UserLoginStore;"],"mappings":"yPAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,YAAY,KAAQ,gBAAgB,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAe,IAAZ,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAChC,IAAAC,SAAA,CAAsCR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAAgCb,QAAQ,CAAC,EAAE,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAAkB;AAC9C,IAAAG,UAAA,CAA2CjB,QAAQ,CAAC,KAAK,CAAC,CAAAkB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAnDE,eAAe,CAAAD,UAAA,IAACE,kBAAkB,CAAAF,UAAA,IACxC,CAAC;AACJ;AACA,mDAFI,CAMF;AACA,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,WAAW,CAAK,CACjCpB,KAAK,CACFqB,IAAI,CAAC,sCAAsC,CAAED,WAAW,CAAC,CACzDE,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,GAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,GAAK,SAAS,CAAE,CAEvCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,CACrB;AACAK,YAAY,CAACC,OAAO,CAAC,OAAO,CAACN,QAAQ,CAACC,IAAI,CAACM,KAAK,CAAC,CACjDpB,cAAc,CAAAqB,aAAA,IAAKR,QAAQ,CAACC,IAAI,CAACQ,IAAI,EAAE,CAAE;AACzClB,WAAW,CAAC,EAAE,CAAC,CACfI,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACLJ,WAAW,CAACS,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CACpC,CACF,CAAC,CAAC,CACDQ,KAAK,CAAC,SAACC,GAAG,CAAK,CACdR,OAAO,CAACC,GAAG,CAAC,KAAK,CAACO,GAAG,CAAC,CACtBpB,WAAW,CAACoB,GAAG,CAACT,OAAO,CAAC,CAC1B,CAAC,CAAC,CACN,CAAC,CAED;AACA,GAAM,CAAAU,UAAU,CAAC,QAAX,CAAAA,UAAUA,CAAA,CAAK,CACnBP,YAAY,CAACQ,KAAK,EAAE,CACpBlB,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED,mBACEhB,IAAA,CAACH,YAAY,CAACsC,QAAQ,EAACC,KAAK,CAAE,CAAC7B,WAAW,CAACI,QAAQ,CAACI,eAAe,CAACE,SAAS,CAACgB,UAAU,CAAE,CAAA9B,QAAA,CACvFA,QAAQ,EACa,CAE5B,CAEA,cAAe,CAAAF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}